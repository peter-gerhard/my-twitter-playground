akka {
  loglevel = "DEBUG"
  loggers = ["akka.event.Logging$DefaultLogger"]

  actor.default-mailbox.stash-capacity=10000

  persistence {

    view.auto-update-interval = 2s

    journal {

      plugin = "akka.persistence.journal.leveldb"

      auto-start-journals = ["akka.persistence.journal.leveldb"]

      leveldb {
        dir = "target/journal"
        native = false

        event-adapters {
          tagging = "de.htw.pgerhard.TaggingEventAdapter"
        }

        event-adapter-bindings {
          "de.htw.pgerhard.domain.users.events.UserRegisteredEvent" = tagging
          "de.htw.pgerhard.domain.users.events.UserNameSetEvent" = tagging
          "de.htw.pgerhard.domain.users.events.UserSubscriptionAddedEvent" = tagging
          "de.htw.pgerhard.domain.users.events.UserSubscriptionRemovedEvent" = tagging
          "de.htw.pgerhard.domain.users.events.UserDeletedEvent" = tagging

          "de.htw.pgerhard.domain.tweets.events.TweetPostedEvent" = tagging
          "de.htw.pgerhard.domain.tweets.events.TweetRepostedEvent" = tagging
          "de.htw.pgerhard.domain.tweets.events.TweetRepostDeletedEvent" = tagging
          "de.htw.pgerhard.domain.tweets.events.TweetDeletedEvent" = tagging
        }
      }
    }
  }
}

ws {
  host: "0.0.0.0"
  port: 8080
}
